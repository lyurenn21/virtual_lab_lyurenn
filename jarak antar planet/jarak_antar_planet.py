# -*- coding: utf-8 -*-
"""jarak antar planet.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HIeHtjpC0d9_oHJJVBEjKRi6d0TXPbVi
"""

import streamlit as st
import pygame
import numpy as np
import math

# Inisialisasi Pygame
pygame.init()

# Dimensi jendela animasi
WIDTH, HEIGHT = 800, 600
window = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Virtual Lab: Pengukuran Jarak Antar Planet")

# Data Planet (Jarak rata-rata dalam juta km)
planets = {
    'Merkurius': 57.9,
    'Venus': 108.2,
    'Bumi': 149.6,
    'Mars': 227.9,
    'Jupiter': 778.3,
    'Saturnus': 1427.0,
    'Uranus': 2871.0,
    'Neptunus': 4497.1
}

# Fungsi untuk menggambar planet
def draw_planets():
    colors = {
        'Merkurius': (169, 169, 169),
        'Venus': (255, 223, 0),
        'Bumi': (0, 0, 255),
        'Mars': (255, 0, 0),
        'Jupiter': (255, 140, 0),
        'Saturnus': (255, 255, 0),
        'Uranus': (0, 255, 255),
        'Neptunus': (0, 0, 255)
    }

    sun_pos = (WIDTH // 2, HEIGHT // 2)  # Posisi Matahari di tengah

    # Gambar Matahari
    pygame.draw.circle(window, (255, 255, 0), sun_pos, 20)

    # Gambar orbit planet
    for i, planet in enumerate(planets):
        distance = planets[planet] * 10  # Skala jarak
        angle = i * 45  # Menentukan posisi planet pada orbit

        # Posisi planet pada orbit (bujur sangkar)
        x = int(sun_pos[0] + distance * np.cos(math.radians(angle)))
        y = int(sun_pos[1] + distance * np.sin(math.radians(angle)))

        # Gambar planet
        pygame.draw.circle(window, colors[planet], (x, y), 10)

        # Gambar nama planet
        font = pygame.font.SysFont("Arial", 14)
        text = font.render(planet, True, (255, 255, 255))
        window.blit(text, (x + 12, y - 7))

# Fungsi untuk menghitung jarak antar planet
def calculate_distance(planet1, planet2):
    dist1 = planets[planet1]  # Jarak planet pertama
    dist2 = planets[planet2]  # Jarak planet kedua
    return abs(dist1 - dist2)  # Menghitung selisih jarak

# Streamlit interface
st.title("Virtual Lab: Pengukuran Jarak Antar Planet")
st.sidebar.header("Pilih Dua Planet")

planet_choices = list(planets.keys())
planet1 = st.sidebar.selectbox("Pilih Planet 1", planet_choices)
planet2 = st.sidebar.selectbox("Pilih Planet 2", planet_choices)

# Tampilkan jarak antar planet yang dipilih
if planet1 and planet2:
    distance = calculate_distance(planet1, planet2)
    st.write(f"Jarak antara {planet1} dan {planet2} adalah {distance:.2f} juta km")

# Animasi Orbit Planet
st.sidebar.text("Klik di bawah untuk melihat animasi orbit planet")
if st.sidebar.button("Mulai Animasi"):
    # Menjalankan animasi menggunakan Pygame
    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        window.fill((0, 0, 0))  # Mengisi latar belakang hitam
        draw_planets()  # Menggambar planet
        pygame.display.flip()  # Memperbarui layar
        pygame.time.delay(50)  # Memberi jeda waktu sebelum pergerakan berikutnya

    pygame.quit()